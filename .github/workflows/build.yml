name: "Build NixOS Image"

on:
  push:
    tags:
      - '*'
    branches:
      - main
  workflow_dispatch:  # Keeping manual trigger capability

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Enable Nix Flakes
        run: |
          mkdir -p ~/.config/nix
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf

      - name: Build NixOS Image
        run: |
          nix build .#nixosConfigurations.digitalOcean.config.system.build.digitalOceanImage
          echo "================================================"  
          ls -la result/
          echo "================================================"  
          ls -la result/nixos*
          echo "================================================"  

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Upload to GCS and create image
        run: |
          echo "Listing workspace contents:"
          ls -la
          echo "================================================"
          echo "Listing result directory contents:"
          ls -la result/
          echo "================================================"
          
          # Find the generated qcow2.bz2 file
          GENERATED_FILE=$(find result -type l -name "nixos-image-digital-ocean-*.qcow2.bz2")
          
          if [ -z "$GENERATED_FILE" ]; then
            echo "Error: No nixos image file found in result directory"
            echo "Contents of result directory:"
            ls -R result/
            exit 1
          fi
          
          echo "Found image file: $GENERATED_FILE"
          
          # Upload to GCS with public access
          OBJECT_NAME="nixos-$(date +%Y%m%d-%H%M%S).qcow2.bz2"
          gsutil cp "$GENERATED_FILE" gs://${{ secrets.GCS_BUCKET_NAME }}/$OBJECT_NAME
          
          gsutil acl ch -u AllUsers:R gs://${{ secrets.GCS_BUCKET_NAME }}/$OBJECT_NAME
          
          # Get the public URL
          IMAGE_URL="https://storage.googleapis.com/${{ secrets.GCS_BUCKET_NAME }}/$OBJECT_NAME"
          echo "::add-mask::$IMAGE_URL"
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  
      - name: Create DigitalOcean Image
        run: |
          doctl compute image create nix-image \
            --region nyc1 \
            --image-url "${{ env.IMAGE_URL }}" \
            --image-description "NixOS image built on $(date +%Y-%m-%d)"

      - name: Get Artifact Information
        run: |
          echo "✓ Process completed successfully"
          echo "→ Custom image will be available at: https://cloud.digitalocean.com/images/custom_images"

          