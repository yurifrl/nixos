name: "🏗️ Build NixOS Image"

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Enable Nix Flakes
        run: |
          mkdir -p ~/.config/nix
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf

      - name: Cache Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: "${{ runner.os }}-nix-${{ hashFiles('**/*.nix') }}"
          paths: |
            /nix/store
            /nix-cache

      - name: Build NixOS Image
        run: |
          nix build .#nixosConfigurations.digitalOcean.config.system.build.digitalOceanImage

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Configure gsutil
        run: |
          # Create .boto configuration file
          echo "[GSUtil]
          parallel_composite_upload_threshold = 150M" > ~/.boto

      - name: Upload to GCS and create image
        run: |
          # Generate image name with timestamp
          NIXOS_IMAGE_NAME="nixos-$(date +%Y%m%d-%H%M%S).qcow2.bz2"
          echo "NIXOS_IMAGE_NAME=$NIXOS_IMAGE_NAME" >> $GITHUB_ENV
          
          # Copy the qcow2.bz2 file with a simple name
          cp result/*qcow2.bz2 nixos.qcow2.bz2
          
          if [ ! -f nixos.qcow2.bz2 ]; then
            echo "Error: Failed to copy nixos image file"
            ls -la result/
            exit 1
          fi
          
          echo "Found image file: nixos.qcow2.bz2"
          echo "NIXOS_IMAGE_NAME: $NIXOS_IMAGE_NAME"
          echo "GCS Bucket: ${{ secrets.GCS_BUCKET_NAME }}"
          
          # Upload to GCS with public access
          gsutil cp -v nixos.qcow2.bz2 "gs://${{ secrets.GCS_BUCKET_NAME }}/${NIXOS_IMAGE_NAME}"
          
          if [ $? -ne 0 ]; then
            echo "Error: Failed to upload to GCS"
            exit 1
          fi
          
          gsutil acl ch -u AllUsers:R "gs://${{ secrets.GCS_BUCKET_NAME }}/${NIXOS_IMAGE_NAME}"
          
          # Get the public URL
          IMAGE_URL="https://storage.googleapis.com/${{ secrets.GCS_BUCKET_NAME }}/$NIXOS_IMAGE_NAME"
          echo "::add-mask::$IMAGE_URL"
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}"
  
      - name: Create DigitalOcean Image
        run: |
          doctl compute image create "$NIXOS_IMAGE_NAME" \
            --region nyc1 \
            --image-url "$IMAGE_URL" \
            --image-description "NixOS image built on $(date +%Y-%m-%d)"

      - name: Get Artifact Information
        run: |
          echo "✓ Process completed successfully"
          echo "→ Custom image will be available at: https://cloud.digitalocean.com/images/custom_images"

          